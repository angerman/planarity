(ns geometry.shapes.multi-doughnut
  (:use [geometry :only (create-geometry with-geometry add-vertex add-face generate-edges-from-faces)]))

(defn create []
  (let [shape (create-geometry)]
    (with-geometry shape
      (let [;; bottom layer
            a (add-vertex 0 0 0)
            b (add-vertex 0 1 0)
            c (add-vertex 0 2 0)
            d (add-vertex 0 3 0)
            e (add-vertex 0 3 1)
            f (add-vertex 0 3 2)
            g (add-vertex 0 3 3)
            h (add-vertex 0 2 3)
            i (add-vertex 0 1 3)
            j (add-vertex 0 0 3)
            k (add-vertex 0 0 2)
            l (add-vertex 0 0 1)
            m (add-vertex 0 1 1)
            n (add-vertex 0 2 1)
            o (add-vertex 0 2 2)
            p (add-vertex 0 1 2)
            
            ;; first layer
            a- (add-vertex 1 0 0)
            b- (add-vertex 1 1 0)
            c- (add-vertex 1 2 0)
            d- (add-vertex 1 3 0)
            e- (add-vertex 1 3 1)
            f- (add-vertex 1 3 2)
            g- (add-vertex 1 3 3)
            h- (add-vertex 1 2 3)
            i- (add-vertex 1 1 3)
            j- (add-vertex 1 0 3)
            k- (add-vertex 1 0 2)
            l- (add-vertex 1 0 1)
            m- (add-vertex 1 1 1)
            n- (add-vertex 1 2 1)
            o- (add-vertex 1 2 2)
            p- (add-vertex 1 1 2)

            ;; second layer
            a+ (add-vertex 2 0 0)
            b+ (add-vertex 2 1 0)
            c+ (add-vertex 2 2 0)
            d+ (add-vertex 2 3 0)
            e+ (add-vertex 2 3 1)
            f+ (add-vertex 2 3 2)
            g+ (add-vertex 2 3 3)
            h+ (add-vertex 2 2 3)
            i+ (add-vertex 2 1 3)
            j+ (add-vertex 2 0 3)
            k+ (add-vertex 2 0 2)
            l+ (add-vertex 2 0 1)
            m+ (add-vertex 2 1 1)
            n+ (add-vertex 2 2 1)
            o+ (add-vertex 2 2 2)
            p+ (add-vertex 2 1 2)
            
            ;; top layer
            a* (add-vertex 3 0 0)
            b* (add-vertex 3 1 0)
            c* (add-vertex 3 2 0)
            d* (add-vertex 3 3 0)
            e* (add-vertex 3 3 1)
            f* (add-vertex 3 3 2)
            g* (add-vertex 3 3 3)
            h* (add-vertex 3 2 3)
            i* (add-vertex 3 1 3)
            j* (add-vertex 3 0 3)
            k* (add-vertex 3 0 2)
            l* (add-vertex 3 0 1)
            m* (add-vertex 3 1 1)
            n* (add-vertex 3 2 1)
            o* (add-vertex 3 2 2)
            p* (add-vertex 3 1 2)]
        ;; bottom
        (add-face a l m b)
        (add-face b m n c)
        (add-face c n e d)
        (add-face n o f e)
        (add-face o h g f)
        (add-face p i h o)
        (add-face k j i p)
        (add-face l k p m)

        ;; first layer
        (add-face b- c- n- m-)
        (add-face e- f- o- n-)
        (add-face h- i- p- o-)
        (add-face k- l- m- p-)
        
        ;; second layer
        (add-face b+ m+ n+ c+)
        (add-face e+ n+ o+ f+)
        (add-face h+ o+ p+ i+)
        (add-face k+ p+ m+ l+)
        
        ;; top
        (add-face a* b* m* l*)
        (add-face b* c* n* m*)
        (add-face c* d* e* n*)
        (add-face n* e* f* o*)
        (add-face o* f* g* h*)
        (add-face p* o* h* i*)
        (add-face k* p* i* j*)
        (add-face l* m* p* k*)
        
        ;; inner shell
        (add-face n m m- n-)
        (add-face o n n- o-)
        (add-face p o o- p-)
        (add-face m p p- m-)

        (add-face b- m- m+ b+)
        (add-face n- c- c+ n+)
        (add-face e- n- n+ e+)
        (add-face o- f- f+ o+)
        (add-face h- o- o+ h+)
        (add-face p- i- i+ p+)
        (add-face k- p- p+ k+)
        (add-face m- l- l+ m+)
        
        (add-face n+ m+ m* n*)
        (add-face o+ n+ n* o*)
        (add-face p+ o+ o* p*)
        (add-face m+ p+ p* m*)
        
        ;; outer shell
        (add-face a b b- a-)
        (add-face b c c- b-)
        (add-face c d d- c-)
        (add-face d e e- d-)
        (add-face e f f- e-)
        (add-face f g g- f-)
        (add-face g h h- g-)
        (add-face h i i- h-)
        (add-face i j j- i-)
        (add-face j k k- j-)
        (add-face k l l- k-)
        (add-face l a a- l-)

        (add-face a- b- b+ a+)
        (add-face c- d- d+ c+)
        (add-face d- e- e+ d+)
        (add-face f- g- g+ f+)
        (add-face g- h- h+ g+)
        (add-face i- j- j+ i+)
        (add-face j- k- k+ j+)
        (add-face l- a- a+ l+)

        (add-face a+ b+ b* a*)
        (add-face b+ c+ c* b*)
        (add-face c+ d+ d* c*)
        (add-face d+ e+ e* d*)
        (add-face e+ f+ f* e*)
        (add-face f+ g+ g* f*)
        (add-face g+ h+ h* g*)
        (add-face h+ i+ i* h*)
        (add-face i+ j+ j* i*)
        (add-face j+ k+ k* j*)
        (add-face k+ l+ l* k*)
        (add-face l+ a+ a* l*)
        
        (generate-edges-from-faces)))
    shape))
